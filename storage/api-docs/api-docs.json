{
    "openapi": "3.0.0",
    "info": {
        "title": "Event Booking API",
        "description": "API documentation for Event, Booking, and Auth management with authentication.",
        "contact": {
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/",
            "description": "Local API Server"
        }
    ],
    "paths": {
        "/api/logini": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login user and get Sanctum token",
                "description": "Authenticate a user with email and password, and receive an API token.",
                "operationId": "5249351cb06d247fb53169d05676f8e0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "user@example.com"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "1|i2kXhX0qDfx7A..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Validation error (missing email or password)"
                    }
                }
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Get authenticated user",
                "description": "Returns the authenticated user's details. Requires Bearer token.",
                "operationId": "31234491f21a35d2de09d4fae7ee13c4",
                "responses": {
                    "200": {
                        "description": "Authenticated user details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "user@example.com"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2025-07-27T10:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bookings": {
            "get": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Get all bookings",
                "description": "Retrieve a paginated list of bookings for all users (admin) or the current user (if you filter logic in your code).",
                "operationId": "eb7c332e8ba161904a1c0071040f61a5",
                "responses": {
                    "200": {
                        "description": "List of bookings",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "bookings": {
                                            "description": "Paginated list of bookings",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/book": {
            "post": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Create a new booking for the authenticated user",
                "description": "Books an event for the logged-in user. Checks if the event is fully booked or already booked by the user.",
                "operationId": "d40fd13b7f58b6c54d255079b78e03af",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "event_id"
                                ],
                                "properties": {
                                    "event_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "booked_at": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-08-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Booking created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "booking": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "This event is fully booked."
                    },
                    "409": {
                        "description": "You already booked this event"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/bookings/{booking}": {
            "get": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Get a specific booking",
                "description": "Retrieve details of a single booking by its ID.",
                "operationId": "5b1a917e6c62a1029dd759b1587c276b",
                "parameters": [
                    {
                        "name": "booking",
                        "in": "path",
                        "description": "ID of the booking",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "booking": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Booking not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/cancel/{booking}": {
            "delete": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Cancel a booking",
                "description": "Cancel (delete) a booking by its ID.",
                "operationId": "49c44ac5aa28b991ad6dcf99c10a568e",
                "parameters": [
                    {
                        "name": "booking",
                        "in": "path",
                        "description": "ID of the booking to cancel",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking canceled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Booking canceled successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Booking not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get a paginated list of events",
                "operationId": "7058ab7c89d20c752b6afd6d808f6526",
                "responses": {
                    "200": {
                        "description": "List of events",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "events": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Event"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/event": {
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Create a new event",
                "operationId": "8442bed1b46e9d75368f98e64c98dd99",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "start_time",
                                    "location",
                                    "capacity"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Laravel Conference 2025"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A conference about Laravel and PHP."
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-09-01T10:00:00Z"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-09-01T18:00:00Z"
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "Algiers, Algeria"
                                    },
                                    "capacity": {
                                        "type": "integer",
                                        "example": 200
                                    },
                                    "image_url": {
                                        "type": "string",
                                        "example": "https://example.com/event.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Event created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "event": {
                                            "$ref": "#/components/schemas/Event"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": [],
                        "role:admin": []
                    }
                ]
            }
        },
        "/api/events/{id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get details of a specific event",
                "operationId": "6f743f71f7a88dbe57be1d9c9ebf47cb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the event",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "event": {
                                            "$ref": "#/components/schemas/Event"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Events"
                ],
                "summary": "Update an existing event",
                "operationId": "fb130dcf1ab4d7abbd3a173741df1f8f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the event",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Event Title"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated event details."
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-08-21T10:00:00Z"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-08-21T18:00:00Z"
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "Oran, Algeria"
                                    },
                                    "capacity": {
                                        "type": "integer",
                                        "example": 120
                                    },
                                    "image_url": {
                                        "type": "string",
                                        "example": "https://example.com/updated.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Event updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "event": {
                                            "$ref": "#/components/schemas/Event"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found"
                    }
                },
                "security": [
                    {
                        "sanctum": [],
                        "role:admin": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "Delete an event",
                "operationId": "b8c8f4b41a32532f5e9f7146e511bc61",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the event",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Event deleted successfully"
                    },
                    "404": {
                        "description": "Event not found"
                    }
                },
                "security": [
                    {
                        "sanctum": [],
                        "role:admin": []
                    }
                ]
            }
        },
        "/api/events/search": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Search events by title, description, or location",
                "operationId": "97d20bbd01ddc03b6117d917f5919b4c",
                "parameters": [
                    {
                        "name": "title",
                        "in": "query",
                        "description": "Filter events by title",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Conference"
                        }
                    },
                    {
                        "name": "description",
                        "in": "query",
                        "description": "Filter events by description",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Laravel"
                        }
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "Filter events by location",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Algiers"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of filtered events",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "events": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Event"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Event": {
                "required": [
                    "title",
                    "start_time",
                    "location",
                    "capacity"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Laravel Conference 2025"
                    },
                    "description": {
                        "type": "string",
                        "example": "A conference about Laravel and PHP."
                    },
                    "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-01T10:00:00Z"
                    },
                    "end_time": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-01T18:00:00Z"
                    },
                    "location": {
                        "type": "string",
                        "example": "Algiers, Algeria"
                    },
                    "capacity": {
                        "type": "integer",
                        "example": 200
                    },
                    "image_url": {
                        "type": "string",
                        "format": "url",
                        "example": "https://example.com/image.jpg"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Authentication related endpoints (Login, Register, Logout, User)."
        },
        {
            "name": "Events",
            "description": "Endpoints for managing events"
        },
        {
            "name": "Bookings",
            "description": "Endpoints for managing event bookings (requires authentication)."
        }
    ]
}